<?php

namespace ContainerBur3GMZ;

use Symfony\Component\DependencyInjection\Argument\RewindableGenerator;
use Symfony\Component\DependencyInjection\ContainerInterface;
use Symfony\Component\DependencyInjection\Exception\RuntimeException;

/*
 * @internal This class has been auto-generated by the Symfony Dependency Injection Component.
 */
class getTest_PrivateServicesLocatorService extends App_KernelTestContainer
{
    /*
     * Gets the public 'test.private_services_locator' shared service.
     *
     * @return \Symfony\Component\DependencyInjection\ServiceLocator
     */
    public static function do($container, $lazyLoad = true)
    {
        return $container->services['test.private_services_locator'] = new \Symfony\Component\DependencyInjection\Argument\ServiceLocator($container->getService ??= $container->getService(...), [
            'App\\Application\\Article\\ArticleService' => ['privates', 'App\\Application\\Article\\ArticleService', 'getArticleServiceService', true],
            'App\\Application\\Comment\\CommentService' => ['privates', 'App\\Application\\Comment\\CommentService', 'getCommentServiceService', true],
            'App\\Application\\Profile\\ProfileService' => ['privates', 'App\\Application\\Profile\\ProfileService', 'getProfileServiceService', true],
            'App\\Application\\Tag\\TagService' => ['privates', 'App\\Application\\Tag\\TagService', 'getTagServiceService', true],
            'App\\Application\\User\\UserService' => ['privates', 'App\\Application\\User\\UserService', 'getUserServiceService', true],
            'App\\Infrastructure\\Persistence\\DataFixtures\\DatabaseSeeder' => ['privates', 'App\\Infrastructure\\Persistence\\DataFixtures\\DatabaseSeeder', 'getDatabaseSeederService', true],
            'App\\Ui\\Console\\SeedDatabaseCommand' => ['privates', 'App\\Ui\\Console\\SeedDatabaseCommand', 'getSeedDatabaseCommandService', true],
            'App\\Ui\\Http\\EventSubscriber\\JsonExceptionSubscriber' => ['privates', 'App\\Ui\\Http\\EventSubscriber\\JsonExceptionSubscriber', 'getJsonExceptionSubscriberService', true],
            'App\\Ui\\Http\\Request\\JsonRequestBodyParser' => ['privates', 'App\\Ui\\Http\\Request\\JsonRequestBodyParser', 'getJsonRequestBodyParserService', true],
            'App\\Ui\\Http\\Response\\RealWorldResponseFactory' => ['privates', 'App\\Ui\\Http\\Response\\RealWorldResponseFactory', 'getRealWorldResponseFactoryService', true],
            'App\\Domain\\User\\UserRepositoryInterface' => ['privates', 'App\\Domain\\User\\UserRepositoryInterface', 'getUserRepositoryInterfaceService', true],
            'App\\Domain\\Article\\ArticleRepositoryInterface' => ['privates', 'App\\Domain\\Article\\ArticleRepositoryInterface', 'getArticleRepositoryInterfaceService', true],
            'App\\Domain\\Comment\\CommentRepositoryInterface' => ['privates', 'App\\Domain\\Comment\\CommentRepositoryInterface', 'getCommentRepositoryInterfaceService', true],
            'App\\Domain\\Tag\\TagRepositoryInterface' => ['privates', 'App\\Domain\\Tag\\TagRepositoryInterface', 'getTagRepositoryInterfaceService', true],
            'cocur_slugify' => ['privates', 'cocur_slugify', 'getCocurSlugifyService', true],
            'controller_resolver' => ['privates', 'controller_resolver', 'getControllerResolverService', false],
            'argument_metadata_factory' => ['privates', 'argument_metadata_factory', 'getArgumentMetadataFactoryService', false],
            'argument_resolver' => ['privates', 'argument_resolver', 'getArgumentResolverService', false],
            'argument_resolver.backed_enum_resolver' => ['privates', 'argument_resolver.backed_enum_resolver', 'getArgumentResolver_BackedEnumResolverService', true],
            'argument_resolver.uid' => ['privates', 'argument_resolver.uid', 'getArgumentResolver_UidService', true],
            'argument_resolver.datetime' => ['privates', 'argument_resolver.datetime', 'getArgumentResolver_DatetimeService', true],
            'argument_resolver.request_payload' => ['privates', 'argument_resolver.request_payload', 'getArgumentResolver_RequestPayloadService', false],
            'argument_resolver.request_attribute' => ['privates', 'argument_resolver.request_attribute', 'getArgumentResolver_RequestAttributeService', true],
            'argument_resolver.request' => ['privates', 'argument_resolver.request', 'getArgumentResolver_RequestService', true],
            'argument_resolver.session' => ['privates', 'argument_resolver.session', 'getArgumentResolver_SessionService', true],
            'argument_resolver.service' => ['privates', 'argument_resolver.service', 'getArgumentResolver_ServiceService', true],
            'argument_resolver.default' => ['privates', 'argument_resolver.default', 'getArgumentResolver_DefaultService', true],
            'argument_resolver.variadic' => ['privates', 'argument_resolver.variadic', 'getArgumentResolver_VariadicService', true],
            'argument_resolver.query_parameter_value_resolver' => ['privates', 'argument_resolver.query_parameter_value_resolver', 'getArgumentResolver_QueryParameterValueResolverService', true],
            'response_listener' => ['privates', 'response_listener', 'getResponseListenerService', false],
            'locale_listener' => ['privates', 'locale_listener', 'getLocaleListenerService', false],
            'validate_request_listener' => ['privates', 'validate_request_listener', 'getValidateRequestListenerService', false],
            'exception_listener' => ['privates', 'exception_listener', 'getExceptionListenerService', false],
            'controller.cache_attribute_listener' => ['privates', 'controller.cache_attribute_listener', 'getController_CacheAttributeListenerService', false],
            'parameter_bag' => ['privates', 'parameter_bag', 'getParameterBagService', false],
            'cache_clearer' => ['privates', 'cache_clearer', 'getCacheClearerService', true],
            'filesystem' => ['privates', 'filesystem', 'getFilesystemService', true],
            'file_locator' => ['privates', 'file_locator', 'getFileLocatorService', true],
            'config_cache_factory' => ['privates', 'config_cache_factory', 'getConfigCacheFactoryService', false],
            'locale_aware_listener' => ['privates', 'locale_aware_listener', 'getLocaleAwareListenerService', false],
            'container.env_var_processor' => ['privates', 'container.env_var_processor', 'getContainer_EnvVarProcessorService', true],
            'slugger' => ['privates', 'slugger', 'getSluggerService', true],
            'container.getenv' => ['privates', 'container.getenv', 'getContainer_GetenvService', true],
            'config_builder.warmer' => ['privates', 'config_builder.warmer', 'getConfigBuilder_WarmerService', true],
            'clock' => ['privates', 'clock', 'getClockService', true],
            'error_handler.error_renderer.html' => ['privates', 'error_handler.error_renderer.html', 'getErrorHandler_ErrorRenderer_HtmlService', true],
            'console.error_listener' => ['privates', 'console.error_listener', 'getConsole_ErrorListenerService', true],
            'console.suggest_missing_package_subscriber' => ['privates', 'console.suggest_missing_package_subscriber', 'getConsole_SuggestMissingPackageSubscriberService', true],
            'console.command.about' => ['privates', 'console.command.about', 'getConsole_Command_AboutService', true],
            'console.command.assets_install' => ['privates', 'console.command.assets_install', 'getConsole_Command_AssetsInstallService', true],
            'console.command.cache_clear' => ['privates', 'console.command.cache_clear', 'getConsole_Command_CacheClearService', true],
            'console.command.cache_pool_clear' => ['privates', 'console.command.cache_pool_clear', 'getConsole_Command_CachePoolClearService', true],
            'console.command.cache_pool_prune' => ['privates', 'console.command.cache_pool_prune', 'getConsole_Command_CachePoolPruneService', true],
            'console.command.cache_pool_invalidate_tags' => ['privates', 'console.command.cache_pool_invalidate_tags', 'getConsole_Command_CachePoolInvalidateTagsService', true],
            'console.command.cache_pool_delete' => ['privates', 'console.command.cache_pool_delete', 'getConsole_Command_CachePoolDeleteService', true],
            'console.command.cache_pool_list' => ['privates', 'console.command.cache_pool_list', 'getConsole_Command_CachePoolListService', true],
            'console.command.cache_warmup' => ['privates', 'console.command.cache_warmup', 'getConsole_Command_CacheWarmupService', true],
            'console.command.config_debug' => ['privates', 'console.command.config_debug', 'getConsole_Command_ConfigDebugService', true],
            'console.command.config_dump_reference' => ['privates', 'console.command.config_dump_reference', 'getConsole_Command_ConfigDumpReferenceService', true],
            'console.command.container_debug' => ['privates', 'console.command.container_debug', 'getConsole_Command_ContainerDebugService', true],
            'console.command.container_lint' => ['privates', 'console.command.container_lint', 'getConsole_Command_ContainerLintService', true],
            'console.command.debug_autowiring' => ['privates', 'console.command.debug_autowiring', 'getConsole_Command_DebugAutowiringService', true],
            'console.command.dotenv_debug' => ['privates', 'console.command.dotenv_debug', 'getConsole_Command_DotenvDebugService', true],
            'console.command.event_dispatcher_debug' => ['privates', 'console.command.event_dispatcher_debug', 'getConsole_Command_EventDispatcherDebugService', true],
            'console.command.router_debug' => ['privates', 'console.command.router_debug', 'getConsole_Command_RouterDebugService', true],
            'console.command.router_match' => ['privates', 'console.command.router_match', 'getConsole_Command_RouterMatchService', true],
            'console.command.serializer_debug' => ['privates', 'console.command.serializer_debug', 'getConsole_Command_SerializerDebugService', true],
            'console.command.validator_debug' => ['privates', 'console.command.validator_debug', 'getConsole_Command_ValidatorDebugService', true],
            'console.command.yaml_lint' => ['privates', 'console.command.yaml_lint', 'getConsole_Command_YamlLintService', true],
            'console.command.secrets_set' => ['privates', 'console.command.secrets_set', 'getConsole_Command_SecretsSetService', true],
            'console.command.secrets_remove' => ['privates', 'console.command.secrets_remove', 'getConsole_Command_SecretsRemoveService', true],
            'console.command.secrets_generate_key' => ['privates', 'console.command.secrets_generate_key', 'getConsole_Command_SecretsGenerateKeyService', true],
            'console.command.secrets_list' => ['privates', 'console.command.secrets_list', 'getConsole_Command_SecretsListService', true],
            'console.command.secrets_reveal' => ['privates', 'console.command.secrets_reveal', 'getConsole_Command_SecretsRevealService', true],
            'console.command.secrets_decrypt_to_local' => ['privates', 'console.command.secrets_decrypt_to_local', 'getConsole_Command_SecretsDecryptToLocalService', true],
            'console.command.secrets_encrypt_from_local' => ['privates', 'console.command.secrets_encrypt_from_local', 'getConsole_Command_SecretsEncryptFromLocalService', true],
            'console.command.error_dumper' => ['privates', 'console.command.error_dumper', 'getConsole_Command_ErrorDumperService', true],
            'cache.app.taggable' => ['privates', 'cache.app.taggable', 'getCache_App_TaggableService', true],
            'cache.validator' => ['privates', 'cache.validator', 'getCache_ValidatorService', false],
            'cache.serializer' => ['privates', 'cache.serializer', 'getCache_SerializerService', false],
            'cache.property_info' => ['privates', 'cache.property_info', 'getCache_PropertyInfoService', false],
            'cache.default_marshaller' => ['privates', 'cache.default_marshaller', 'getCache_DefaultMarshallerService', true],
            'cache.default_clearer' => ['services', 'cache.app_clearer', 'getCache_AppClearerService', true],
            'test.session.listener' => ['privates', 'test.session.listener', 'getTest_Session_ListenerService', false],
            'debug.debug_handlers_listener' => ['privates', 'debug.debug_handlers_listener', 'getDebug_DebugHandlersListenerService', false],
            'debug.file_link_formatter' => ['privates', 'debug.file_link_formatter', 'getDebug_FileLinkFormatterService', true],
            'routing.resolver' => ['privates', 'routing.resolver', 'getRouting_ResolverService', true],
            'routing.loader.xml' => ['privates', 'routing.loader.xml', 'getRouting_Loader_XmlService', true],
            'routing.loader.yml' => ['privates', 'routing.loader.yml', 'getRouting_Loader_YmlService', true],
            'routing.loader.php' => ['privates', 'routing.loader.php', 'getRouting_Loader_PhpService', true],
            'routing.loader.glob' => ['privates', 'routing.loader.glob', 'getRouting_Loader_GlobService', true],
            'routing.loader.directory' => ['privates', 'routing.loader.directory', 'getRouting_Loader_DirectoryService', true],
            'routing.loader.container' => ['privates', 'routing.loader.container', 'getRouting_Loader_ContainerService', true],
            'routing.loader.attribute' => ['privates', 'routing.loader.attribute', 'getRouting_Loader_AttributeService', true],
            'routing.loader.attribute.directory' => ['privates', 'routing.loader.attribute.directory', 'getRouting_Loader_Attribute_DirectoryService', true],
            'routing.loader.attribute.file' => ['privates', 'routing.loader.attribute.file', 'getRouting_Loader_Attribute_FileService', true],
            'routing.loader.psr4' => ['privates', 'routing.loader.psr4', 'getRouting_Loader_Psr4Service', true],
            'router.default' => ['services', 'router', 'getRouterService', false],
            'router.request_context' => ['privates', 'router.request_context', 'getRouter_RequestContextService', false],
            'router.cache_warmer' => ['privates', 'router.cache_warmer', 'getRouter_CacheWarmerService', true],
            'router_listener' => ['privates', 'router_listener', 'getRouterListenerService', false],
            'property_accessor' => ['privates', 'property_accessor', 'getPropertyAccessorService', false],
            'secrets.vault' => ['privates', 'secrets.vault', 'getSecrets_VaultService', true],
            'secrets.env_var_loader' => ['privates', 'secrets.env_var_loader', 'getSecrets_EnvVarLoaderService', true],
            'secrets.decryption_key' => ['privates', 'secrets.decryption_key', 'getSecrets_DecryptionKeyService', true],
            'secrets.local_vault' => ['privates', 'secrets.local_vault', 'getSecrets_LocalVaultService', true],
            'serializer' => ['privates', 'serializer', 'getSerializerService', false],
            'serializer.mapping.class_discriminator_resolver' => ['privates', 'serializer.mapping.class_discriminator_resolver', 'getSerializer_Mapping_ClassDiscriminatorResolverService', false],
            'serializer.normalizer.constraint_violation_list' => ['privates', 'serializer.normalizer.constraint_violation_list', 'getSerializer_Normalizer_ConstraintViolationListService', false],
            'serializer.normalizer.datetimezone' => ['privates', 'serializer.normalizer.datetimezone', 'getSerializer_Normalizer_DatetimezoneService', false],
            'serializer.normalizer.dateinterval' => ['privates', 'serializer.normalizer.dateinterval', 'getSerializer_Normalizer_DateintervalService', false],
            'serializer.normalizer.data_uri' => ['privates', 'serializer.normalizer.data_uri', 'getSerializer_Normalizer_DataUriService', false],
            'serializer.normalizer.datetime' => ['privates', 'serializer.normalizer.datetime', 'getSerializer_Normalizer_DatetimeService', false],
            'serializer.normalizer.json_serializable' => ['privates', 'serializer.normalizer.json_serializable', 'getSerializer_Normalizer_JsonSerializableService', false],
            'serializer.normalizer.problem' => ['privates', 'serializer.normalizer.problem', 'getSerializer_Normalizer_ProblemService', false],
            'serializer.denormalizer.unwrapping' => ['privates', 'serializer.denormalizer.unwrapping', 'getSerializer_Denormalizer_UnwrappingService', false],
            'serializer.normalizer.uid' => ['privates', 'serializer.normalizer.uid', 'getSerializer_Normalizer_UidService', false],
            'serializer.normalizer.form_error' => ['privates', 'serializer.normalizer.form_error', 'getSerializer_Normalizer_FormErrorService', false],
            'serializer.normalizer.object' => ['privates', 'serializer.normalizer.object', 'getSerializer_Normalizer_ObjectService', false],
            'serializer.denormalizer.array' => ['privates', 'serializer.denormalizer.array', 'getSerializer_Denormalizer_ArrayService', false],
            'serializer.mapping.chain_loader' => ['privates', 'serializer.mapping.chain_loader', 'getSerializer_Mapping_ChainLoaderService', false],
            'serializer.mapping.cache_warmer' => ['privates', 'serializer.mapping.cache_warmer', 'getSerializer_Mapping_CacheWarmerService', true],
            'serializer.mapping.cache.symfony' => ['privates', 'serializer.mapping.cache.symfony', 'getSerializer_Mapping_Cache_SymfonyService', false],
            'serializer.mapping.cache_class_metadata_factory' => ['privates', 'serializer.mapping.cache_class_metadata_factory', 'getSerializer_Mapping_CacheClassMetadataFactoryService', false],
            'serializer.encoder.xml' => ['privates', 'serializer.encoder.xml', 'getSerializer_Encoder_XmlService', false],
            'serializer.encoder.json' => ['privates', 'serializer.encoder.json', 'getSerializer_Encoder_JsonService', false],
            'serializer.encoder.yaml' => ['privates', 'serializer.encoder.yaml', 'getSerializer_Encoder_YamlService', false],
            'serializer.encoder.csv' => ['privates', 'serializer.encoder.csv', 'getSerializer_Encoder_CsvService', false],
            'serializer.name_converter.metadata_aware' => ['privates', 'serializer.name_converter.metadata_aware', 'getSerializer_NameConverter_MetadataAwareService', false],
            'property_info.serializer_extractor' => ['privates', 'property_info.serializer_extractor', 'getPropertyInfo_SerializerExtractorService', true],
            'error_handler.error_renderer.serializer' => ['privates', 'error_handler.error_renderer.serializer', 'getErrorHandler_ErrorRenderer_SerializerService', true],
            'serializer.normalizer.backed_enum' => ['privates', 'serializer.normalizer.backed_enum', 'getSerializer_Normalizer_BackedEnumService', false],
            'serializer.normalizer.number' => ['privates', 'serializer.normalizer.number', 'getSerializer_Normalizer_NumberService', false],
            'property_info.cache' => ['privates', 'property_info.cache', 'getPropertyInfo_CacheService', false],
            'property_info.reflection_extractor' => ['privates', 'property_info.reflection_extractor', 'getPropertyInfo_ReflectionExtractorService', false],
            'ulid.factory' => ['privates', 'ulid.factory', 'getUlid_FactoryService', true],
            'uuid.factory' => ['privates', 'uuid.factory', 'getUuid_FactoryService', true],
            'cache.property_access' => ['privates', 'cache.property_access', 'getCache_PropertyAccessService', false],
            'session.factory' => ['privates', 'session.factory', 'getSession_FactoryService', true],
            'session.storage.factory.mock_file' => ['privates', 'session.storage.factory.mock_file', 'getSession_Storage_Factory_MockFileService', true],
            'session.handler.native' => ['privates', 'session.handler.native', 'getSession_Handler_NativeService', true],
            'security.csrf.token_generator' => ['privates', 'security.csrf.token_generator', 'getSecurity_Csrf_TokenGeneratorService', false],
            'security.csrf.token_storage' => ['privates', 'security.csrf.token_storage', 'getSecurity_Csrf_TokenStorageService', false],
            'security.csrf.token_manager' => ['privates', 'security.csrf.token_manager', 'getSecurity_Csrf_TokenManagerService', false],
            'validator' => ['privates', 'validator', 'getValidatorService', false],
            'validator.builder' => ['privates', 'validator.builder', 'getValidator_BuilderService', false],
            'validator.mapping.cache_warmer' => ['privates', 'validator.mapping.cache_warmer', 'getValidator_Mapping_CacheWarmerService', true],
            'validator.mapping.cache.adapter' => ['privates', 'validator.mapping.cache.adapter', 'getValidator_Mapping_Cache_AdapterService', false],
            'validator.validator_factory' => ['privates', 'validator.validator_factory', 'getValidator_ValidatorFactoryService', false],
            'validator.expression' => ['privates', 'validator.expression', 'getValidator_ExpressionService', true],
            'validator.email' => ['privates', 'validator.email', 'getValidator_EmailService', true],
            'validator.not_compromised_password' => ['privates', 'validator.not_compromised_password', 'getValidator_NotCompromisedPasswordService', true],
            'validator.when' => ['privates', 'validator.when', 'getValidator_WhenService', true],
            'validator.no_suspicious_characters' => ['privates', 'validator.no_suspicious_characters', 'getValidator_NoSuspiciousCharactersService', true],
            'validator.property_info_loader' => ['privates', 'validator.property_info_loader', 'getValidator_PropertyInfoLoaderService', false],
            'security.authorization_checker' => ['privates', 'security.authorization_checker', 'getSecurity_AuthorizationCheckerService', false],
            'security.token_storage' => ['privates', 'security.token_storage', 'getSecurity_TokenStorageService', false],
            'security.untracked_token_storage' => ['privates', 'security.untracked_token_storage', 'getSecurity_UntrackedTokenStorageService', false],
            'security.helper' => ['privates', 'security.helper', 'getSecurity_HelperService', true],
            'security.user_value_resolver' => ['privates', 'security.user_value_resolver', 'getSecurity_UserValueResolverService', true],
            'security.security_token_value_resolver' => ['privates', 'security.security_token_value_resolver', 'getSecurity_SecurityTokenValueResolverService', true],
            'security.authentication.trust_resolver' => ['privates', 'security.authentication.trust_resolver', 'getSecurity_Authentication_TrustResolverService', true],
            'security.user_checker' => ['privates', 'security.user_checker', 'getSecurity_UserCheckerService', true],
            'security.user_checker_locator' => ['privates', 'security.user_checker_locator', 'getSecurity_UserCheckerLocatorService', true],
            'security.access.decision_manager' => ['privates', 'security.access.decision_manager', 'getSecurity_Access_DecisionManagerService', false],
            'security.access.simple_role_voter' => ['privates', 'security.access.simple_role_voter', 'getSecurity_Access_SimpleRoleVoterService', true],
            'security.access.authenticated_voter' => ['privates', 'security.access.authenticated_voter', 'getSecurity_Access_AuthenticatedVoterService', true],
            'security.access.closure_voter' => ['privates', 'security.access.closure_voter', 'getSecurity_Access_ClosureVoterService', true],
            'security.firewall' => ['privates', 'security.firewall', 'getSecurity_FirewallService', false],
            'security.firewall.map' => ['privates', 'security.firewall.map', 'getSecurity_Firewall_MapService', false],
            'security.logout_url_generator' => ['privates', 'security.logout_url_generator', 'getSecurity_LogoutUrlGeneratorService', false],
            'security.route_loader.logout' => ['privates', 'security.route_loader.logout', 'getSecurity_RouteLoader_LogoutService', true],
            'security.http_utils' => ['privates', 'security.http_utils', 'getSecurity_HttpUtilsService', true],
            'security.validator.user_password' => ['privates', 'security.validator.user_password', 'getSecurity_Validator_UserPasswordService', true],
            'controller.is_granted_attribute_listener' => ['privates', 'controller.is_granted_attribute_listener', 'getController_IsGrantedAttributeListenerService', false],
            'security.password_hasher_factory' => ['privates', 'security.password_hasher_factory', 'getSecurity_PasswordHasherFactoryService', true],
            'security.user_password_hasher' => ['privates', 'security.user_password_hasher', 'getSecurity_UserPasswordHasherService', true],
            'security.channel_listener' => ['privates', 'security.channel_listener', 'getSecurity_ChannelListenerService', true],
            'security.access_map' => ['privates', 'security.access_map', 'getSecurity_AccessMapService', true],
            'security.access_listener' => ['privates', 'security.access_listener', 'getSecurity_AccessListenerService', true],
            'security.firewall.event_dispatcher_locator' => ['privates', 'security.firewall.event_dispatcher_locator', 'getSecurity_Firewall_EventDispatcherLocatorService', true],
            'security.authenticator.managers_locator' => ['privates', 'security.authenticator.managers_locator', 'getSecurity_Authenticator_ManagersLocatorService', true],
            'security.listener.check_authenticator_credentials' => ['privates', 'security.listener.check_authenticator_credentials', 'getSecurity_Listener_CheckAuthenticatorCredentialsService', true],
            'security.listener.user_provider' => ['privates', 'security.listener.user_provider', 'getSecurity_Listener_UserProviderService', true],
            'security.listener.password_migrating' => ['privates', 'security.listener.password_migrating', 'getSecurity_Listener_PasswordMigratingService', true],
            'security.command.debug_firewall' => ['privates', 'security.command.debug_firewall', 'getSecurity_Command_DebugFirewallService', true],
            'security.user.provider.concrete.app_user_provider' => ['privates', 'security.user.provider.concrete.app_user_provider', 'getSecurity_User_Provider_Concrete_AppUserProviderService', true],
            'security.firewall.map.config.dev' => ['privates', 'security.firewall.map.config.dev', 'getSecurity_Firewall_Map_Config_DevService', true],
            'security.firewall.map.context.dev' => ['privates', 'security.firewall.map.context.dev', 'getSecurity_Firewall_Map_Context_DevService', true],
            'security.firewall.map.config.api' => ['privates', 'security.firewall.map.config.api', 'getSecurity_Firewall_Map_Config_ApiService', true],
            'security.listener.api.user_provider' => ['privates', 'security.listener.api.user_provider', 'getSecurity_Listener_Api_UserProviderService', true],
            'security.event_dispatcher.api' => ['privates', 'security.event_dispatcher.api', 'getSecurity_EventDispatcher_ApiService', true],
            'security.authenticator.jwt.api' => ['privates', 'security.authenticator.jwt.api', 'getSecurity_Authenticator_Jwt_ApiService', true],
            'security.authenticator.manager.api' => ['privates', 'security.authenticator.manager.api', 'getSecurity_Authenticator_Manager_ApiService', true],
            'security.firewall.authenticator.api' => ['privates', 'security.firewall.authenticator.api', 'getSecurity_Firewall_Authenticator_ApiService', true],
            'security.listener.user_checker.api' => ['privates', 'security.listener.user_checker.api', 'getSecurity_Listener_UserChecker_ApiService', true],
            'security.exception_listener.api' => ['privates', 'security.exception_listener.api', 'getSecurity_ExceptionListener_ApiService', true],
            'security.firewall.map.context.api' => ['privates', 'security.firewall.map.context.api', 'getSecurity_Firewall_Map_Context_ApiService', true],
            'security.command.user_password_hash' => ['privates', 'security.command.user_password_hash', 'getSecurity_Command_UserPasswordHashService', true],
            'lexik_jwt_authentication.payload_enrichment' => ['privates', 'lexik_jwt_authentication.payload_enrichment', 'getLexikJwtAuthentication_PayloadEnrichmentService', true],
            'lexik_jwt_authentication.key_loader.raw' => ['services', 'lexik_jwt_authentication.key_loader', 'getLexikJwtAuthentication_KeyLoaderService', true],
            'lexik_jwt_authentication.encoder.lcobucci' => ['services', 'lexik_jwt_authentication.encoder', 'getLexikJwtAuthentication_EncoderService', true],
            'lexik_jwt_authentication.jws_provider.lcobucci' => ['privates', 'lexik_jwt_authentication.jws_provider.lcobucci', 'getLexikJwtAuthentication_JwsProvider_LcobucciService', true],
            'lexik_jwt_authentication.extractor.chain_extractor' => ['privates', 'lexik_jwt_authentication.extractor.chain_extractor', 'getLexikJwtAuthentication_Extractor_ChainExtractorService', true],
            'lexik_jwt_authentication.extractor.authorization_header_extractor' => ['privates', 'lexik_jwt_authentication.extractor.authorization_header_extractor', 'getLexikJwtAuthentication_Extractor_AuthorizationHeaderExtractorService', true],
            'lexik_jwt_authentication.check_config_command' => ['privates', 'lexik_jwt_authentication.check_config_command', 'getLexikJwtAuthentication_CheckConfigCommandService', true],
            'lexik_jwt_authentication.enable_encryption_config_command' => ['privates', 'lexik_jwt_authentication.enable_encryption_config_command', 'getLexikJwtAuthentication_EnableEncryptionConfigCommandService', true],
            'lexik_jwt_authentication.generate_keypair_command' => ['privates', 'lexik_jwt_authentication.generate_keypair_command', 'getLexikJwtAuthentication_GenerateKeypairCommandService', true],
            'nelmio_cors.cors_listener' => ['privates', 'nelmio_cors.cors_listener', 'getNelmioCors_CorsListenerService', false],
            'nelmio_cors.options_resolver' => ['privates', 'nelmio_cors.options_resolver', 'getNelmioCors_OptionsResolverService', false],
            'nelmio_cors.options_provider.config' => ['privates', 'nelmio_cors.options_provider.config', 'getNelmioCors_OptionsProvider_ConfigService', false],
            'nelmio_cors.cacheable_response_vary_listener' => ['privates', 'nelmio_cors.cacheable_response_vary_listener', 'getNelmioCors_CacheableResponseVaryListenerService', false],
            'doctrine.dbal.connection_factory' => ['privates', 'doctrine.dbal.connection_factory', 'getDoctrine_Dbal_ConnectionFactoryService', false],
            'doctrine.dbal.connection_factory.dsn_parser' => ['privates', 'doctrine.dbal.connection_factory.dsn_parser', 'getDoctrine_Dbal_ConnectionFactory_DsnParserService', false],
            'doctrine.database_create_command' => ['privates', 'doctrine.database_create_command', 'getDoctrine_DatabaseCreateCommandService', true],
            'doctrine.database_drop_command' => ['privates', 'doctrine.database_drop_command', 'getDoctrine_DatabaseDropCommandService', true],
            'doctrine.query_sql_command' => ['privates', 'doctrine.query_sql_command', 'getDoctrine_QuerySqlCommandService', true],
            'Doctrine\\DBAL\\Tools\\Console\\Command\\RunSqlCommand' => ['privates', 'Doctrine\\DBAL\\Tools\\Console\\Command\\RunSqlCommand', 'getRunSqlCommandService', true],
            'doctrine.dbal.idle_connection_listener' => ['privates', 'doctrine.dbal.idle_connection_listener', 'getDoctrine_Dbal_IdleConnectionListenerService', false],
            'doctrine.dbal.legacy_schema_manager_factory' => ['privates', 'doctrine.dbal.legacy_schema_manager_factory', 'getDoctrine_Dbal_LegacySchemaManagerFactoryService', false],
            'doctrine.dbal.default_connection.configuration' => ['privates', 'doctrine.dbal.default_connection.configuration', 'getDoctrine_Dbal_DefaultConnection_ConfigurationService', false],
            'doctrine.dbal.default_connection.event_manager' => ['privates', 'doctrine.dbal.default_connection.event_manager', 'getDoctrine_Dbal_DefaultConnection_EventManagerService', false],
            'Doctrine\\Bundle\\DoctrineBundle\\Dbal\\ManagerRegistryAwareConnectionProvider' => ['privates', 'Doctrine\\Bundle\\DoctrineBundle\\Dbal\\ManagerRegistryAwareConnectionProvider', 'getManagerRegistryAwareConnectionProviderService', true],
            'doctrine.dbal.connection_expiries' => ['privates', 'doctrine.dbal.connection_expiries', 'getDoctrine_Dbal_ConnectionExpiriesService', false],
            'doctrine.orm.proxy_cache_warmer' => ['privates', 'doctrine.orm.proxy_cache_warmer', 'getDoctrine_Orm_ProxyCacheWarmerService', true],
            'doctrine.orm.container_repository_factory' => ['privates', 'doctrine.orm.container_repository_factory', 'getDoctrine_Orm_ContainerRepositoryFactoryService', false],
            'doctrine.orm.validator.unique' => ['privates', 'doctrine.orm.validator.unique', 'getDoctrine_Orm_Validator_UniqueService', true],
            'doctrine.orm.validator_initializer' => ['privates', 'doctrine.orm.validator_initializer', 'getDoctrine_Orm_ValidatorInitializerService', false],
            'doctrine.orm.listeners.doctrine_dbal_cache_adapter_schema_listener' => ['privates', 'doctrine.orm.listeners.doctrine_dbal_cache_adapter_schema_listener', 'getDoctrine_Orm_Listeners_DoctrineDbalCacheAdapterSchemaListenerService', true],
            'doctrine.orm.listeners.doctrine_token_provider_schema_listener' => ['privates', 'doctrine.orm.listeners.doctrine_token_provider_schema_listener', 'getDoctrine_Orm_Listeners_DoctrineTokenProviderSchemaListenerService', true],
            'doctrine.orm.listeners.pdo_session_handler_schema_listener' => ['privates', 'doctrine.orm.listeners.pdo_session_handler_schema_listener', 'getDoctrine_Orm_Listeners_PdoSessionHandlerSchemaListenerService', true],
            'doctrine.orm.listeners.lock_store_schema_listener' => ['privates', 'doctrine.orm.listeners.lock_store_schema_listener', 'getDoctrine_Orm_Listeners_LockStoreSchemaListenerService', true],
            'doctrine.orm.naming_strategy.underscore' => ['privates', 'doctrine.orm.naming_strategy.underscore', 'getDoctrine_Orm_NamingStrategy_UnderscoreService', false],
            'doctrine.orm.quote_strategy.default' => ['privates', 'doctrine.orm.quote_strategy.default', 'getDoctrine_Orm_QuoteStrategy_DefaultService', false],
            'doctrine.orm.typed_field_mapper.default' => ['privates', 'doctrine.orm.typed_field_mapper.default', 'getDoctrine_Orm_TypedFieldMapper_DefaultService', false],
            'doctrine.ulid_generator' => ['privates', 'doctrine.ulid_generator', 'getDoctrine_UlidGeneratorService', true],
            'doctrine.uuid_generator' => ['privates', 'doctrine.uuid_generator', 'getDoctrine_UuidGeneratorService', true],
            'doctrine.orm.command.entity_manager_provider' => ['privates', 'doctrine.orm.command.entity_manager_provider', 'getDoctrine_Orm_Command_EntityManagerProviderService', true],
            'doctrine.orm.entity_value_resolver' => ['privates', 'doctrine.orm.entity_value_resolver', 'getDoctrine_Orm_EntityValueResolverService', true],
            'doctrine.cache_clear_metadata_command' => ['privates', 'doctrine.cache_clear_metadata_command', 'getDoctrine_CacheClearMetadataCommandService', true],
            'doctrine.cache_clear_query_cache_command' => ['privates', 'doctrine.cache_clear_query_cache_command', 'getDoctrine_CacheClearQueryCacheCommandService', true],
            'doctrine.cache_clear_result_command' => ['privates', 'doctrine.cache_clear_result_command', 'getDoctrine_CacheClearResultCommandService', true],
            'doctrine.cache_collection_region_command' => ['privates', 'doctrine.cache_collection_region_command', 'getDoctrine_CacheCollectionRegionCommandService', true],
            'doctrine.schema_create_command' => ['privates', 'doctrine.schema_create_command', 'getDoctrine_SchemaCreateCommandService', true],
            'doctrine.schema_drop_command' => ['privates', 'doctrine.schema_drop_command', 'getDoctrine_SchemaDropCommandService', true],
            'doctrine.clear_entity_region_command' => ['privates', 'doctrine.clear_entity_region_command', 'getDoctrine_ClearEntityRegionCommandService', true],
            'doctrine.mapping_info_command' => ['privates', 'doctrine.mapping_info_command', 'getDoctrine_MappingInfoCommandService', true],
            'doctrine.mapping_describe_command' => ['privates', 'doctrine.mapping_describe_command', 'getDoctrine_MappingDescribeCommandService', true],
            'doctrine.clear_query_region_command' => ['privates', 'doctrine.clear_query_region_command', 'getDoctrine_ClearQueryRegionCommandService', true],
            'doctrine.query_dql_command' => ['privates', 'doctrine.query_dql_command', 'getDoctrine_QueryDqlCommandService', true],
            'doctrine.schema_update_command' => ['privates', 'doctrine.schema_update_command', 'getDoctrine_SchemaUpdateCommandService', true],
            'doctrine.schema_validate_command' => ['privates', 'doctrine.schema_validate_command', 'getDoctrine_SchemaValidateCommandService', true],
            'doctrine.orm.default_configuration' => ['privates', 'doctrine.orm.default_configuration', 'getDoctrine_Orm_DefaultConfigurationService', false],
            'doctrine.orm.default_attribute_metadata_driver' => ['privates', 'doctrine.orm.default_attribute_metadata_driver', 'getDoctrine_Orm_DefaultAttributeMetadataDriverService', false],
            'doctrine.orm.default_metadata_cache_warmer' => ['privates', 'doctrine.orm.default_metadata_cache_warmer', 'getDoctrine_Orm_DefaultMetadataCacheWarmerService', true],
            'cache.doctrine.orm.default.metadata' => ['privates', 'cache.doctrine.orm.default.metadata', 'getCache_Doctrine_Orm_Default_MetadataService', false],
            'cache.doctrine.orm.default.result' => ['privates', 'cache.doctrine.orm.default.result', 'getCache_Doctrine_Orm_Default_ResultService', false],
            'cache.doctrine.orm.default.query' => ['privates', 'cache.doctrine.orm.default.query', 'getCache_Doctrine_Orm_Default_QueryService', false],
            'doctrine.orm.default_entity_listener_resolver' => ['privates', 'doctrine.orm.default_entity_listener_resolver', 'getDoctrine_Orm_DefaultEntityListenerResolverService', false],
            'doctrine.orm.default_listeners.attach_entity_listeners' => ['privates', 'doctrine.orm.default_listeners.attach_entity_listeners', 'getDoctrine_Orm_DefaultListeners_AttachEntityListenersService', true],
            'doctrine.orm.default_manager_configurator' => ['privates', 'doctrine.orm.default_manager_configurator', 'getDoctrine_Orm_DefaultManagerConfiguratorService', false],
            'doctrine.orm.default_entity_manager.property_info_extractor' => ['privates', 'doctrine.orm.default_entity_manager.property_info_extractor', 'getDoctrine_Orm_DefaultEntityManager_PropertyInfoExtractorService', true],
            'doctrine.orm.default_entity_manager.validator_loader' => ['privates', 'doctrine.orm.default_entity_manager.validator_loader', 'getDoctrine_Orm_DefaultEntityManager_ValidatorLoaderService', false],
            'doctrine.migrations.dependency_factory' => ['privates', 'doctrine.migrations.dependency_factory', 'getDoctrine_Migrations_DependencyFactoryService', true],
            'doctrine.migrations.configuration_loader' => ['privates', 'doctrine.migrations.configuration_loader', 'getDoctrine_Migrations_ConfigurationLoaderService', true],
            'doctrine.migrations.entity_manager_registry_loader' => ['privates', 'doctrine.migrations.entity_manager_registry_loader', 'getDoctrine_Migrations_EntityManagerRegistryLoaderService', true],
            'doctrine.migrations.configuration' => ['privates', 'doctrine.migrations.configuration', 'getDoctrine_Migrations_ConfigurationService', true],
            'doctrine.migrations.migrations_factory' => ['privates', 'doctrine.migrations.migrations_factory', 'getDoctrine_Migrations_MigrationsFactoryService', true],
            'doctrine_migrations.diff_command' => ['privates', 'doctrine_migrations.diff_command', 'getDoctrineMigrations_DiffCommandService', true],
            'doctrine_migrations.sync_metadata_command' => ['privates', 'doctrine_migrations.sync_metadata_command', 'getDoctrineMigrations_SyncMetadataCommandService', true],
            'doctrine_migrations.versions_command' => ['privates', 'doctrine_migrations.versions_command', 'getDoctrineMigrations_VersionsCommandService', true],
            'doctrine_migrations.current_command' => ['privates', 'doctrine_migrations.current_command', 'getDoctrineMigrations_CurrentCommandService', true],
            'doctrine_migrations.dump_schema_command' => ['privates', 'doctrine_migrations.dump_schema_command', 'getDoctrineMigrations_DumpSchemaCommandService', true],
            'doctrine_migrations.execute_command' => ['privates', 'doctrine_migrations.execute_command', 'getDoctrineMigrations_ExecuteCommandService', true],
            'doctrine_migrations.generate_command' => ['privates', 'doctrine_migrations.generate_command', 'getDoctrineMigrations_GenerateCommandService', true],
            'doctrine_migrations.latest_command' => ['privates', 'doctrine_migrations.latest_command', 'getDoctrineMigrations_LatestCommandService', true],
            'doctrine_migrations.migrate_command' => ['privates', 'doctrine_migrations.migrate_command', 'getDoctrineMigrations_MigrateCommandService', true],
            'doctrine_migrations.rollup_command' => ['privates', 'doctrine_migrations.rollup_command', 'getDoctrineMigrations_RollupCommandService', true],
            'doctrine_migrations.status_command' => ['privates', 'doctrine_migrations.status_command', 'getDoctrineMigrations_StatusCommandService', true],
            'doctrine_migrations.up_to_date_command' => ['privates', 'doctrine_migrations.up_to_date_command', 'getDoctrineMigrations_UpToDateCommandService', true],
            'doctrine_migrations.version_command' => ['privates', 'doctrine_migrations.version_command', 'getDoctrineMigrations_VersionCommandService', true],
            'doctrine_migrations.schema_filter_listener' => ['privates', 'doctrine_migrations.schema_filter_listener', 'getDoctrineMigrations_SchemaFilterListenerService', false],
            'doctrine.migrations.storage.table_storage' => ['privates', 'doctrine.migrations.storage.table_storage', 'getDoctrine_Migrations_Storage_TableStorageService', true],
            'security.listener.csrf_protection' => ['privates', 'security.listener.csrf_protection', 'getSecurity_Listener_CsrfProtectionService', true],
            'controller.is_csrf_token_valid_attribute_listener' => ['privates', 'controller.is_csrf_token_valid_attribute_listener', 'getController_IsCsrfTokenValidAttributeListenerService', false],
            'security.logout.listener.csrf_token_clearing' => ['privates', 'security.logout.listener.csrf_token_clearing', 'getSecurity_Logout_Listener_CsrfTokenClearingService', true],
            'doctrine.dbal.default_schema_asset_filter_manager' => ['privates', 'doctrine.dbal.default_schema_asset_filter_manager', 'getDoctrine_Dbal_DefaultSchemaAssetFilterManagerService', false],
            'doctrine.dbal.idle_connection_middleware.default' => ['privates', 'doctrine.dbal.idle_connection_middleware.default', 'getDoctrine_Dbal_IdleConnectionMiddleware_DefaultService', false],
            'logger' => ['privates', 'logger', 'getLoggerService', false],
            'serializer.mapping.cache_class_metadata_factory.inner' => ['privates', 'serializer.mapping.cache_class_metadata_factory.inner', 'getSerializer_Mapping_CacheClassMetadataFactory_InnerService', false],
            'property_info.cache.inner' => ['privates', 'property_info.cache.inner', 'getPropertyInfo_Cache_InnerService', false],
            'Cocur\\Slugify\\SlugifyInterface' => ['privates', 'cocur_slugify', 'getCocurSlugifyService', true],
            'Symfony\\Component\\DependencyInjection\\ParameterBag\\ContainerBagInterface' => ['privates', 'parameter_bag', 'getParameterBagService', false],
            'Symfony\\Component\\DependencyInjection\\ParameterBag\\ParameterBagInterface' => ['privates', 'parameter_bag', 'getParameterBagService', false],
            'Symfony\\Component\\EventDispatcher\\EventDispatcherInterface' => ['services', 'event_dispatcher', 'getEventDispatcherService', false],
            'Symfony\\Contracts\\EventDispatcher\\EventDispatcherInterface' => ['services', 'event_dispatcher', 'getEventDispatcherService', false],
            'Psr\\EventDispatcher\\EventDispatcherInterface' => ['services', 'event_dispatcher', 'getEventDispatcherService', false],
            'Symfony\\Component\\HttpKernel\\HttpKernelInterface' => ['services', 'http_kernel', 'getHttpKernelService', false],
            'Symfony\\Component\\HttpFoundation\\RequestStack' => ['services', 'request_stack', 'getRequestStackService', false],
            'Symfony\\Component\\HttpKernel\\KernelInterface' => ['services', 'kernel', 'getKernelService', true],
            'Symfony\\Component\\Filesystem\\Filesystem' => ['privates', 'filesystem', 'getFilesystemService', true],
            'Symfony\\Component\\HttpKernel\\Config\\FileLocator' => ['privates', 'file_locator', 'getFileLocatorService', true],
            'Symfony\\Component\\HttpKernel\\DependencyInjection\\ServicesResetterInterface' => ['services', 'services_resetter', 'getServicesResetterService', true],
            'Symfony\\Component\\String\\Slugger\\SluggerInterface' => ['privates', 'slugger', 'getSluggerService', true],
            'Symfony\\Component\\Clock\\ClockInterface' => ['privates', 'clock', 'getClockService', true],
            'Psr\\Clock\\ClockInterface' => ['privates', 'clock', 'getClockService', true],
            'error_renderer.html' => ['privates', 'error_handler.error_renderer.html', 'getErrorHandler_ErrorRenderer_HtmlService', true],
            'error_renderer' => ['privates', 'error_handler.error_renderer.serializer', 'getErrorHandler_ErrorRenderer_SerializerService', true],
            'Psr\\Container\\ContainerInterface $parameterBag' => ['privates', 'parameter_bag', 'getParameterBagService', false],
            'Psr\\Cache\\CacheItemPoolInterface' => ['services', 'cache.app', 'getCache_AppService', true],
            'Symfony\\Contracts\\Cache\\CacheInterface' => ['services', 'cache.app', 'getCache_AppService', true],
            'Symfony\\Contracts\\Cache\\NamespacedPoolInterface' => ['services', 'cache.app', 'getCache_AppService', true],
            'Symfony\\Contracts\\Cache\\TagAwareCacheInterface' => ['privates', 'cache.app.taggable', 'getCache_App_TaggableService', true],
            'Symfony\\Component\\ErrorHandler\\ErrorRenderer\\FileLinkFormatter' => ['privates', 'debug.file_link_formatter', 'getDebug_FileLinkFormatterService', true],
            'Symfony\\Component\\Routing\\RouterInterface' => ['services', 'router', 'getRouterService', false],
            'Symfony\\Component\\Routing\\Generator\\UrlGeneratorInterface' => ['services', 'router', 'getRouterService', false],
            'Symfony\\Component\\Routing\\Matcher\\UrlMatcherInterface' => ['services', 'router', 'getRouterService', false],
            'Symfony\\Component\\Routing\\RequestContextAwareInterface' => ['services', 'router', 'getRouterService', false],
            'Symfony\\Component\\Routing\\RequestContext' => ['privates', 'router.request_context', 'getRouter_RequestContextService', false],
            'Symfony\\Component\\PropertyAccess\\PropertyAccessorInterface' => ['privates', 'property_accessor', 'getPropertyAccessorService', false],
            'Symfony\\Component\\Serializer\\SerializerInterface' => ['privates', 'serializer', 'getSerializerService', false],
            'Symfony\\Component\\Serializer\\Normalizer\\NormalizerInterface' => ['privates', 'serializer', 'getSerializerService', false],
            'Symfony\\Component\\Serializer\\Normalizer\\DenormalizerInterface' => ['privates', 'serializer', 'getSerializerService', false],
            'Symfony\\Component\\Serializer\\Encoder\\EncoderInterface' => ['privates', 'serializer', 'getSerializerService', false],
            'Symfony\\Component\\Serializer\\Encoder\\DecoderInterface' => ['privates', 'serializer', 'getSerializerService', false],
            'serializer.property_accessor' => ['privates', 'property_accessor', 'getPropertyAccessorService', false],
            'Symfony\\Component\\Serializer\\Mapping\\ClassDiscriminatorResolverInterface' => ['privates', 'serializer.mapping.class_discriminator_resolver', 'getSerializer_Mapping_ClassDiscriminatorResolverService', false],
            'Symfony\\Component\\Serializer\\Mapping\\Factory\\ClassMetadataFactoryInterface' => ['privates', 'serializer.mapping.cache_class_metadata_factory', 'getSerializer_Mapping_CacheClassMetadataFactoryService', false],
            'error_renderer.serializer' => ['privates', 'error_handler.error_renderer.serializer', 'getErrorHandler_ErrorRenderer_SerializerService', true],
            'Symfony\\Component\\PropertyInfo\\PropertyAccessExtractorInterface' => ['privates', 'property_info.cache', 'getPropertyInfo_CacheService', false],
            'Symfony\\Component\\PropertyInfo\\PropertyDescriptionExtractorInterface' => ['privates', 'property_info.cache', 'getPropertyInfo_CacheService', false],
            'Symfony\\Component\\PropertyInfo\\PropertyInfoExtractorInterface' => ['privates', 'property_info.cache', 'getPropertyInfo_CacheService', false],
            'Symfony\\Component\\PropertyInfo\\PropertyTypeExtractorInterface' => ['privates', 'property_info.cache', 'getPropertyInfo_CacheService', false],
            'Symfony\\Component\\PropertyInfo\\PropertyListExtractorInterface' => ['privates', 'property_info.cache', 'getPropertyInfo_CacheService', false],
            'Symfony\\Component\\PropertyInfo\\PropertyInitializableExtractorInterface' => ['privates', 'property_info.cache', 'getPropertyInfo_CacheService', false],
            'Symfony\\Component\\PropertyInfo\\PropertyReadInfoExtractorInterface' => ['privates', 'property_info.reflection_extractor', 'getPropertyInfo_ReflectionExtractorService', false],
            'Symfony\\Component\\PropertyInfo\\PropertyWriteInfoExtractorInterface' => ['privates', 'property_info.reflection_extractor', 'getPropertyInfo_ReflectionExtractorService', false],
            'Symfony\\Component\\Uid\\Factory\\UlidFactory' => ['privates', 'ulid.factory', 'getUlid_FactoryService', true],
            'Symfony\\Component\\Uid\\Factory\\UuidFactory' => ['privates', 'uuid.factory', 'getUuid_FactoryService', true],
            'cache.default_doctrine_dbal_provider' => ['services', 'doctrine.dbal.default_connection', 'getDoctrine_Dbal_DefaultConnectionService', false],
            'SessionHandlerInterface' => ['privates', 'session.handler.native', 'getSession_Handler_NativeService', true],
            'session.storage.factory' => ['privates', 'session.storage.factory.mock_file', 'getSession_Storage_Factory_MockFileService', true],
            'session.handler' => ['privates', 'session.handler.native', 'getSession_Handler_NativeService', true],
            'session_listener' => ['privates', 'test.session.listener', 'getTest_Session_ListenerService', false],
            'Symfony\\Component\\Security\\Csrf\\TokenGenerator\\TokenGeneratorInterface' => ['privates', 'security.csrf.token_generator', 'getSecurity_Csrf_TokenGeneratorService', false],
            'Symfony\\Component\\Security\\Csrf\\TokenStorage\\TokenStorageInterface' => ['privates', 'security.csrf.token_storage', 'getSecurity_Csrf_TokenStorageService', false],
            'Symfony\\Component\\Security\\Csrf\\CsrfTokenManagerInterface' => ['privates', 'security.csrf.token_manager', 'getSecurity_Csrf_TokenManagerService', false],
            'Symfony\\Component\\Validator\\Validator\\ValidatorInterface' => ['privates', 'validator', 'getValidatorService', false],
            'validator.mapping.class_metadata_factory' => ['privates', 'validator', 'getValidatorService', false],
            'Symfony\\Component\\Security\\Core\\Authorization\\AuthorizationCheckerInterface' => ['privates', 'security.authorization_checker', 'getSecurity_AuthorizationCheckerService', false],
            'Symfony\\Component\\Security\\Core\\Authorization\\UserAuthorizationCheckerInterface' => ['privates', 'security.authorization_checker', 'getSecurity_AuthorizationCheckerService', false],
            'Symfony\\Component\\Security\\Core\\Authentication\\Token\\Storage\\TokenStorageInterface' => ['privates', 'security.token_storage', 'getSecurity_TokenStorageService', false],
            'Symfony\\Bundle\\SecurityBundle\\Security' => ['privates', 'security.helper', 'getSecurity_HelperService', true],
            'Symfony\\Component\\Security\\Core\\Authorization\\AccessDecisionManagerInterface' => ['privates', 'security.access.decision_manager', 'getSecurity_Access_DecisionManagerService', false],
            'Symfony\\Component\\Security\\Http\\Firewall' => ['privates', 'security.firewall', 'getSecurity_FirewallService', false],
            'Symfony\\Component\\Security\\Http\\FirewallMapInterface' => ['privates', 'security.firewall.map', 'getSecurity_Firewall_MapService', false],
            'Symfony\\Component\\Security\\Http\\HttpUtils' => ['privates', 'security.http_utils', 'getSecurity_HttpUtilsService', true],
            'Symfony\\Component\\PasswordHasher\\Hasher\\PasswordHasherFactoryInterface' => ['privates', 'security.password_hasher_factory', 'getSecurity_PasswordHasherFactoryService', true],
            'security.password_hasher' => ['privates', 'security.user_password_hasher', 'getSecurity_UserPasswordHasherService', true],
            'Symfony\\Component\\PasswordHasher\\Hasher\\UserPasswordHasherInterface' => ['privates', 'security.user_password_hasher', 'getSecurity_UserPasswordHasherService', true],
            'security.user_providers' => ['privates', 'security.user.provider.concrete.app_user_provider', 'getSecurity_User_Provider_Concrete_AppUserProviderService', true],
            'Symfony\\Component\\Security\\Core\\User\\UserProviderInterface' => ['privates', 'security.user.provider.concrete.app_user_provider', 'getSecurity_User_Provider_Concrete_AppUserProviderService', true],
            'security.user_checker.api' => ['privates', 'security.user_checker', 'getSecurity_UserCheckerService', true],
            'security.firewall.context_locator' => ['privates', '.service_locator.6Ygf1.m', 'get_ServiceLocator_6Ygf1_MService', false],
            'Symfony\\Component\\Security\\Core\\User\\UserCheckerInterface' => ['privates', 'security.user_checker', 'getSecurity_UserCheckerService', true],
            'Lexik\\Bundle\\JWTAuthenticationBundle\\Services\\JWTTokenManagerInterface' => ['services', 'lexik_jwt_authentication.jwt_manager', 'getLexikJwtAuthentication_JwtManagerService', true],
            'Lexik\\Bundle\\JWTAuthenticationBundle\\Services\\JWSProvider\\JWSProviderInterface' => ['privates', 'lexik_jwt_authentication.jws_provider.lcobucci', 'getLexikJwtAuthentication_JwsProvider_LcobucciService', true],
            'Lexik\\Bundle\\JWTAuthenticationBundle\\TokenExtractor\\TokenExtractorInterface' => ['privates', 'lexik_jwt_authentication.extractor.chain_extractor', 'getLexikJwtAuthentication_Extractor_ChainExtractorService', true],
            'Lexik\\Bundle\\JWTAuthenticationBundle\\Encoder\\JWTEncoderInterface' => ['services', 'lexik_jwt_authentication.encoder', 'getLexikJwtAuthentication_EncoderService', true],
            'Doctrine\\DBAL\\Connection' => ['services', 'doctrine.dbal.default_connection', 'getDoctrine_Dbal_DefaultConnectionService', false],
            'Doctrine\\Persistence\\ManagerRegistry' => ['services', 'doctrine', 'getDoctrineService', false],
            'Doctrine\\Common\\Persistence\\ManagerRegistry' => ['services', 'doctrine', 'getDoctrineService', false],
            'doctrine.dbal.event_manager' => ['privates', 'doctrine.dbal.default_connection.event_manager', 'getDoctrine_Dbal_DefaultConnection_EventManagerService', false],
            'Doctrine\\DBAL\\Connection $defaultConnection' => ['services', 'doctrine.dbal.default_connection', 'getDoctrine_Dbal_DefaultConnectionService', false],
            'Doctrine\\ORM\\EntityManagerInterface' => ['services', 'doctrine.orm.default_entity_manager', 'getDoctrine_Orm_DefaultEntityManagerService', false],
            'doctrine.orm.default_metadata_cache' => ['privates', 'cache.doctrine.orm.default.metadata', 'getCache_Doctrine_Orm_Default_MetadataService', false],
            'doctrine.orm.default_result_cache' => ['privates', 'cache.doctrine.orm.default.result', 'getCache_Doctrine_Orm_Default_ResultService', false],
            'doctrine.orm.default_query_cache' => ['privates', 'cache.doctrine.orm.default.query', 'getCache_Doctrine_Orm_Default_QueryService', false],
            'Doctrine\\ORM\\EntityManagerInterface $defaultEntityManager' => ['services', 'doctrine.orm.default_entity_manager', 'getDoctrine_Orm_DefaultEntityManagerService', false],
            'doctrine.orm.default_entity_manager.event_manager' => ['privates', 'doctrine.dbal.default_connection.event_manager', 'getDoctrine_Dbal_DefaultConnection_EventManagerService', false],
            'doctrine.migrations.metadata_storage' => ['privates', 'doctrine.migrations.storage.table_storage', 'getDoctrine_Migrations_Storage_TableStorageService', true],
            'argument_resolver.controller_locator' => ['privates', '.service_locator.F6vdjrP', 'get_ServiceLocator_F6vdjrPService', true],
            'doctrine.id_generator_locator' => ['privates', '.service_locator.BxSdgVt', 'get_ServiceLocator_BxSdgVtService', false],
            'Psr\\Log\\LoggerInterface' => ['privates', 'logger', 'getLoggerService', false],
            'serializer.mapping.class_metadata_factory' => ['privates', 'serializer.mapping.cache_class_metadata_factory', 'getSerializer_Mapping_CacheClassMetadataFactoryService', false],
            'property_info' => ['privates', 'property_info.cache', 'getPropertyInfo_CacheService', false],
            'doctrine.orm.default_metadata_driver' => ['privates', '.doctrine.orm.default_metadata_driver', 'get_Doctrine_Orm_DefaultMetadataDriverService', false],
        ], [
            'App\\Application\\Article\\ArticleService' => '?',
            'App\\Application\\Comment\\CommentService' => '?',
            'App\\Application\\Profile\\ProfileService' => '?',
            'App\\Application\\Tag\\TagService' => '?',
            'App\\Application\\User\\UserService' => '?',
            'App\\Infrastructure\\Persistence\\DataFixtures\\DatabaseSeeder' => '?',
            'App\\Ui\\Console\\SeedDatabaseCommand' => '?',
            'App\\Ui\\Http\\EventSubscriber\\JsonExceptionSubscriber' => '?',
            'App\\Ui\\Http\\Request\\JsonRequestBodyParser' => '?',
            'App\\Ui\\Http\\Response\\RealWorldResponseFactory' => '?',
            'App\\Domain\\User\\UserRepositoryInterface' => '?',
            'App\\Domain\\Article\\ArticleRepositoryInterface' => '?',
            'App\\Domain\\Comment\\CommentRepositoryInterface' => '?',
            'App\\Domain\\Tag\\TagRepositoryInterface' => '?',
            'cocur_slugify' => '?',
            'controller_resolver' => '?',
            'argument_metadata_factory' => '?',
            'argument_resolver' => '?',
            'argument_resolver.backed_enum_resolver' => '?',
            'argument_resolver.uid' => '?',
            'argument_resolver.datetime' => '?',
            'argument_resolver.request_payload' => '?',
            'argument_resolver.request_attribute' => '?',
            'argument_resolver.request' => '?',
            'argument_resolver.session' => '?',
            'argument_resolver.service' => '?',
            'argument_resolver.default' => '?',
            'argument_resolver.variadic' => '?',
            'argument_resolver.query_parameter_value_resolver' => '?',
            'response_listener' => '?',
            'locale_listener' => '?',
            'validate_request_listener' => '?',
            'exception_listener' => '?',
            'controller.cache_attribute_listener' => '?',
            'parameter_bag' => '?',
            'cache_clearer' => '?',
            'filesystem' => '?',
            'file_locator' => '?',
            'config_cache_factory' => '?',
            'locale_aware_listener' => '?',
            'container.env_var_processor' => '?',
            'slugger' => '?',
            'container.getenv' => '?',
            'config_builder.warmer' => '?',
            'clock' => '?',
            'error_handler.error_renderer.html' => '?',
            'console.error_listener' => '?',
            'console.suggest_missing_package_subscriber' => '?',
            'console.command.about' => '?',
            'console.command.assets_install' => '?',
            'console.command.cache_clear' => '?',
            'console.command.cache_pool_clear' => '?',
            'console.command.cache_pool_prune' => '?',
            'console.command.cache_pool_invalidate_tags' => '?',
            'console.command.cache_pool_delete' => '?',
            'console.command.cache_pool_list' => '?',
            'console.command.cache_warmup' => '?',
            'console.command.config_debug' => '?',
            'console.command.config_dump_reference' => '?',
            'console.command.container_debug' => '?',
            'console.command.container_lint' => '?',
            'console.command.debug_autowiring' => '?',
            'console.command.dotenv_debug' => '?',
            'console.command.event_dispatcher_debug' => '?',
            'console.command.router_debug' => '?',
            'console.command.router_match' => '?',
            'console.command.serializer_debug' => '?',
            'console.command.validator_debug' => '?',
            'console.command.yaml_lint' => '?',
            'console.command.secrets_set' => '?',
            'console.command.secrets_remove' => '?',
            'console.command.secrets_generate_key' => '?',
            'console.command.secrets_list' => '?',
            'console.command.secrets_reveal' => '?',
            'console.command.secrets_decrypt_to_local' => '?',
            'console.command.secrets_encrypt_from_local' => '?',
            'console.command.error_dumper' => '?',
            'cache.app.taggable' => '?',
            'cache.validator' => '?',
            'cache.serializer' => '?',
            'cache.property_info' => '?',
            'cache.default_marshaller' => '?',
            'cache.default_clearer' => '?',
            'test.session.listener' => '?',
            'debug.debug_handlers_listener' => '?',
            'debug.file_link_formatter' => '?',
            'routing.resolver' => '?',
            'routing.loader.xml' => '?',
            'routing.loader.yml' => '?',
            'routing.loader.php' => '?',
            'routing.loader.glob' => '?',
            'routing.loader.directory' => '?',
            'routing.loader.container' => '?',
            'routing.loader.attribute' => '?',
            'routing.loader.attribute.directory' => '?',
            'routing.loader.attribute.file' => '?',
            'routing.loader.psr4' => '?',
            'router.default' => '?',
            'router.request_context' => '?',
            'router.cache_warmer' => '?',
            'router_listener' => '?',
            'property_accessor' => '?',
            'secrets.vault' => '?',
            'secrets.env_var_loader' => '?',
            'secrets.decryption_key' => '?',
            'secrets.local_vault' => '?',
            'serializer' => '?',
            'serializer.mapping.class_discriminator_resolver' => '?',
            'serializer.normalizer.constraint_violation_list' => '?',
            'serializer.normalizer.datetimezone' => '?',
            'serializer.normalizer.dateinterval' => '?',
            'serializer.normalizer.data_uri' => '?',
            'serializer.normalizer.datetime' => '?',
            'serializer.normalizer.json_serializable' => '?',
            'serializer.normalizer.problem' => '?',
            'serializer.denormalizer.unwrapping' => '?',
            'serializer.normalizer.uid' => '?',
            'serializer.normalizer.form_error' => '?',
            'serializer.normalizer.object' => '?',
            'serializer.denormalizer.array' => '?',
            'serializer.mapping.chain_loader' => '?',
            'serializer.mapping.cache_warmer' => '?',
            'serializer.mapping.cache.symfony' => '?',
            'serializer.mapping.cache_class_metadata_factory' => '?',
            'serializer.encoder.xml' => '?',
            'serializer.encoder.json' => '?',
            'serializer.encoder.yaml' => '?',
            'serializer.encoder.csv' => '?',
            'serializer.name_converter.metadata_aware' => '?',
            'property_info.serializer_extractor' => '?',
            'error_handler.error_renderer.serializer' => '?',
            'serializer.normalizer.backed_enum' => '?',
            'serializer.normalizer.number' => '?',
            'property_info.cache' => '?',
            'property_info.reflection_extractor' => '?',
            'ulid.factory' => '?',
            'uuid.factory' => '?',
            'cache.property_access' => '?',
            'session.factory' => '?',
            'session.storage.factory.mock_file' => '?',
            'session.handler.native' => '?',
            'security.csrf.token_generator' => '?',
            'security.csrf.token_storage' => '?',
            'security.csrf.token_manager' => '?',
            'validator' => '?',
            'validator.builder' => '?',
            'validator.mapping.cache_warmer' => '?',
            'validator.mapping.cache.adapter' => '?',
            'validator.validator_factory' => '?',
            'validator.expression' => '?',
            'validator.email' => '?',
            'validator.not_compromised_password' => '?',
            'validator.when' => '?',
            'validator.no_suspicious_characters' => '?',
            'validator.property_info_loader' => '?',
            'security.authorization_checker' => '?',
            'security.token_storage' => '?',
            'security.untracked_token_storage' => '?',
            'security.helper' => '?',
            'security.user_value_resolver' => '?',
            'security.security_token_value_resolver' => '?',
            'security.authentication.trust_resolver' => '?',
            'security.user_checker' => '?',
            'security.user_checker_locator' => '?',
            'security.access.decision_manager' => '?',
            'security.access.simple_role_voter' => '?',
            'security.access.authenticated_voter' => '?',
            'security.access.closure_voter' => '?',
            'security.firewall' => '?',
            'security.firewall.map' => '?',
            'security.logout_url_generator' => '?',
            'security.route_loader.logout' => '?',
            'security.http_utils' => '?',
            'security.validator.user_password' => '?',
            'controller.is_granted_attribute_listener' => '?',
            'security.password_hasher_factory' => '?',
            'security.user_password_hasher' => '?',
            'security.channel_listener' => '?',
            'security.access_map' => '?',
            'security.access_listener' => '?',
            'security.firewall.event_dispatcher_locator' => '?',
            'security.authenticator.managers_locator' => '?',
            'security.listener.check_authenticator_credentials' => '?',
            'security.listener.user_provider' => '?',
            'security.listener.password_migrating' => '?',
            'security.command.debug_firewall' => '?',
            'security.user.provider.concrete.app_user_provider' => '?',
            'security.firewall.map.config.dev' => '?',
            'security.firewall.map.context.dev' => '?',
            'security.firewall.map.config.api' => '?',
            'security.listener.api.user_provider' => '?',
            'security.event_dispatcher.api' => '?',
            'security.authenticator.jwt.api' => '?',
            'security.authenticator.manager.api' => '?',
            'security.firewall.authenticator.api' => '?',
            'security.listener.user_checker.api' => '?',
            'security.exception_listener.api' => '?',
            'security.firewall.map.context.api' => '?',
            'security.command.user_password_hash' => '?',
            'lexik_jwt_authentication.payload_enrichment' => '?',
            'lexik_jwt_authentication.key_loader.raw' => '?',
            'lexik_jwt_authentication.encoder.lcobucci' => '?',
            'lexik_jwt_authentication.jws_provider.lcobucci' => '?',
            'lexik_jwt_authentication.extractor.chain_extractor' => '?',
            'lexik_jwt_authentication.extractor.authorization_header_extractor' => '?',
            'lexik_jwt_authentication.check_config_command' => '?',
            'lexik_jwt_authentication.enable_encryption_config_command' => '?',
            'lexik_jwt_authentication.generate_keypair_command' => '?',
            'nelmio_cors.cors_listener' => '?',
            'nelmio_cors.options_resolver' => '?',
            'nelmio_cors.options_provider.config' => '?',
            'nelmio_cors.cacheable_response_vary_listener' => '?',
            'doctrine.dbal.connection_factory' => '?',
            'doctrine.dbal.connection_factory.dsn_parser' => '?',
            'doctrine.database_create_command' => '?',
            'doctrine.database_drop_command' => '?',
            'doctrine.query_sql_command' => '?',
            'Doctrine\\DBAL\\Tools\\Console\\Command\\RunSqlCommand' => '?',
            'doctrine.dbal.idle_connection_listener' => '?',
            'doctrine.dbal.legacy_schema_manager_factory' => '?',
            'doctrine.dbal.default_connection.configuration' => '?',
            'doctrine.dbal.default_connection.event_manager' => '?',
            'Doctrine\\Bundle\\DoctrineBundle\\Dbal\\ManagerRegistryAwareConnectionProvider' => '?',
            'doctrine.dbal.connection_expiries' => '?',
            'doctrine.orm.proxy_cache_warmer' => '?',
            'doctrine.orm.container_repository_factory' => '?',
            'doctrine.orm.validator.unique' => '?',
            'doctrine.orm.validator_initializer' => '?',
            'doctrine.orm.listeners.doctrine_dbal_cache_adapter_schema_listener' => '?',
            'doctrine.orm.listeners.doctrine_token_provider_schema_listener' => '?',
            'doctrine.orm.listeners.pdo_session_handler_schema_listener' => '?',
            'doctrine.orm.listeners.lock_store_schema_listener' => '?',
            'doctrine.orm.naming_strategy.underscore' => '?',
            'doctrine.orm.quote_strategy.default' => '?',
            'doctrine.orm.typed_field_mapper.default' => '?',
            'doctrine.ulid_generator' => '?',
            'doctrine.uuid_generator' => '?',
            'doctrine.orm.command.entity_manager_provider' => '?',
            'doctrine.orm.entity_value_resolver' => '?',
            'doctrine.cache_clear_metadata_command' => '?',
            'doctrine.cache_clear_query_cache_command' => '?',
            'doctrine.cache_clear_result_command' => '?',
            'doctrine.cache_collection_region_command' => '?',
            'doctrine.schema_create_command' => '?',
            'doctrine.schema_drop_command' => '?',
            'doctrine.clear_entity_region_command' => '?',
            'doctrine.mapping_info_command' => '?',
            'doctrine.mapping_describe_command' => '?',
            'doctrine.clear_query_region_command' => '?',
            'doctrine.query_dql_command' => '?',
            'doctrine.schema_update_command' => '?',
            'doctrine.schema_validate_command' => '?',
            'doctrine.orm.default_configuration' => '?',
            'doctrine.orm.default_attribute_metadata_driver' => '?',
            'doctrine.orm.default_metadata_cache_warmer' => '?',
            'cache.doctrine.orm.default.metadata' => '?',
            'cache.doctrine.orm.default.result' => '?',
            'cache.doctrine.orm.default.query' => '?',
            'doctrine.orm.default_entity_listener_resolver' => '?',
            'doctrine.orm.default_listeners.attach_entity_listeners' => '?',
            'doctrine.orm.default_manager_configurator' => '?',
            'doctrine.orm.default_entity_manager.property_info_extractor' => '?',
            'doctrine.orm.default_entity_manager.validator_loader' => '?',
            'doctrine.migrations.dependency_factory' => '?',
            'doctrine.migrations.configuration_loader' => '?',
            'doctrine.migrations.entity_manager_registry_loader' => '?',
            'doctrine.migrations.configuration' => '?',
            'doctrine.migrations.migrations_factory' => '?',
            'doctrine_migrations.diff_command' => '?',
            'doctrine_migrations.sync_metadata_command' => '?',
            'doctrine_migrations.versions_command' => '?',
            'doctrine_migrations.current_command' => '?',
            'doctrine_migrations.dump_schema_command' => '?',
            'doctrine_migrations.execute_command' => '?',
            'doctrine_migrations.generate_command' => '?',
            'doctrine_migrations.latest_command' => '?',
            'doctrine_migrations.migrate_command' => '?',
            'doctrine_migrations.rollup_command' => '?',
            'doctrine_migrations.status_command' => '?',
            'doctrine_migrations.up_to_date_command' => '?',
            'doctrine_migrations.version_command' => '?',
            'doctrine_migrations.schema_filter_listener' => '?',
            'doctrine.migrations.storage.table_storage' => '?',
            'security.listener.csrf_protection' => '?',
            'controller.is_csrf_token_valid_attribute_listener' => '?',
            'security.logout.listener.csrf_token_clearing' => '?',
            'doctrine.dbal.default_schema_asset_filter_manager' => '?',
            'doctrine.dbal.idle_connection_middleware.default' => '?',
            'logger' => '?',
            'serializer.mapping.cache_class_metadata_factory.inner' => '?',
            'property_info.cache.inner' => '?',
            'Cocur\\Slugify\\SlugifyInterface' => '?',
            'Symfony\\Component\\DependencyInjection\\ParameterBag\\ContainerBagInterface' => '?',
            'Symfony\\Component\\DependencyInjection\\ParameterBag\\ParameterBagInterface' => '?',
            'Symfony\\Component\\EventDispatcher\\EventDispatcherInterface' => '?',
            'Symfony\\Contracts\\EventDispatcher\\EventDispatcherInterface' => '?',
            'Psr\\EventDispatcher\\EventDispatcherInterface' => '?',
            'Symfony\\Component\\HttpKernel\\HttpKernelInterface' => '?',
            'Symfony\\Component\\HttpFoundation\\RequestStack' => '?',
            'Symfony\\Component\\HttpKernel\\KernelInterface' => '?',
            'Symfony\\Component\\Filesystem\\Filesystem' => '?',
            'Symfony\\Component\\HttpKernel\\Config\\FileLocator' => '?',
            'Symfony\\Component\\HttpKernel\\DependencyInjection\\ServicesResetterInterface' => '?',
            'Symfony\\Component\\String\\Slugger\\SluggerInterface' => '?',
            'Symfony\\Component\\Clock\\ClockInterface' => '?',
            'Psr\\Clock\\ClockInterface' => '?',
            'error_renderer.html' => '?',
            'error_renderer' => '?',
            'Psr\\Container\\ContainerInterface $parameterBag' => '?',
            'Psr\\Cache\\CacheItemPoolInterface' => '?',
            'Symfony\\Contracts\\Cache\\CacheInterface' => '?',
            'Symfony\\Contracts\\Cache\\NamespacedPoolInterface' => '?',
            'Symfony\\Contracts\\Cache\\TagAwareCacheInterface' => '?',
            'Symfony\\Component\\ErrorHandler\\ErrorRenderer\\FileLinkFormatter' => '?',
            'Symfony\\Component\\Routing\\RouterInterface' => '?',
            'Symfony\\Component\\Routing\\Generator\\UrlGeneratorInterface' => '?',
            'Symfony\\Component\\Routing\\Matcher\\UrlMatcherInterface' => '?',
            'Symfony\\Component\\Routing\\RequestContextAwareInterface' => '?',
            'Symfony\\Component\\Routing\\RequestContext' => '?',
            'Symfony\\Component\\PropertyAccess\\PropertyAccessorInterface' => '?',
            'Symfony\\Component\\Serializer\\SerializerInterface' => '?',
            'Symfony\\Component\\Serializer\\Normalizer\\NormalizerInterface' => '?',
            'Symfony\\Component\\Serializer\\Normalizer\\DenormalizerInterface' => '?',
            'Symfony\\Component\\Serializer\\Encoder\\EncoderInterface' => '?',
            'Symfony\\Component\\Serializer\\Encoder\\DecoderInterface' => '?',
            'serializer.property_accessor' => '?',
            'Symfony\\Component\\Serializer\\Mapping\\ClassDiscriminatorResolverInterface' => '?',
            'Symfony\\Component\\Serializer\\Mapping\\Factory\\ClassMetadataFactoryInterface' => '?',
            'error_renderer.serializer' => '?',
            'Symfony\\Component\\PropertyInfo\\PropertyAccessExtractorInterface' => '?',
            'Symfony\\Component\\PropertyInfo\\PropertyDescriptionExtractorInterface' => '?',
            'Symfony\\Component\\PropertyInfo\\PropertyInfoExtractorInterface' => '?',
            'Symfony\\Component\\PropertyInfo\\PropertyTypeExtractorInterface' => '?',
            'Symfony\\Component\\PropertyInfo\\PropertyListExtractorInterface' => '?',
            'Symfony\\Component\\PropertyInfo\\PropertyInitializableExtractorInterface' => '?',
            'Symfony\\Component\\PropertyInfo\\PropertyReadInfoExtractorInterface' => '?',
            'Symfony\\Component\\PropertyInfo\\PropertyWriteInfoExtractorInterface' => '?',
            'Symfony\\Component\\Uid\\Factory\\UlidFactory' => '?',
            'Symfony\\Component\\Uid\\Factory\\UuidFactory' => '?',
            'cache.default_doctrine_dbal_provider' => '?',
            'SessionHandlerInterface' => '?',
            'session.storage.factory' => '?',
            'session.handler' => '?',
            'session_listener' => '?',
            'Symfony\\Component\\Security\\Csrf\\TokenGenerator\\TokenGeneratorInterface' => '?',
            'Symfony\\Component\\Security\\Csrf\\TokenStorage\\TokenStorageInterface' => '?',
            'Symfony\\Component\\Security\\Csrf\\CsrfTokenManagerInterface' => '?',
            'Symfony\\Component\\Validator\\Validator\\ValidatorInterface' => '?',
            'validator.mapping.class_metadata_factory' => '?',
            'Symfony\\Component\\Security\\Core\\Authorization\\AuthorizationCheckerInterface' => '?',
            'Symfony\\Component\\Security\\Core\\Authorization\\UserAuthorizationCheckerInterface' => '?',
            'Symfony\\Component\\Security\\Core\\Authentication\\Token\\Storage\\TokenStorageInterface' => '?',
            'Symfony\\Bundle\\SecurityBundle\\Security' => '?',
            'Symfony\\Component\\Security\\Core\\Authorization\\AccessDecisionManagerInterface' => '?',
            'Symfony\\Component\\Security\\Http\\Firewall' => '?',
            'Symfony\\Component\\Security\\Http\\FirewallMapInterface' => '?',
            'Symfony\\Component\\Security\\Http\\HttpUtils' => '?',
            'Symfony\\Component\\PasswordHasher\\Hasher\\PasswordHasherFactoryInterface' => '?',
            'security.password_hasher' => '?',
            'Symfony\\Component\\PasswordHasher\\Hasher\\UserPasswordHasherInterface' => '?',
            'security.user_providers' => '?',
            'Symfony\\Component\\Security\\Core\\User\\UserProviderInterface' => '?',
            'security.user_checker.api' => '?',
            'security.firewall.context_locator' => '?',
            'Symfony\\Component\\Security\\Core\\User\\UserCheckerInterface' => '?',
            'Lexik\\Bundle\\JWTAuthenticationBundle\\Services\\JWTTokenManagerInterface' => '?',
            'Lexik\\Bundle\\JWTAuthenticationBundle\\Services\\JWSProvider\\JWSProviderInterface' => '?',
            'Lexik\\Bundle\\JWTAuthenticationBundle\\TokenExtractor\\TokenExtractorInterface' => '?',
            'Lexik\\Bundle\\JWTAuthenticationBundle\\Encoder\\JWTEncoderInterface' => '?',
            'Doctrine\\DBAL\\Connection' => '?',
            'Doctrine\\Persistence\\ManagerRegistry' => '?',
            'Doctrine\\Common\\Persistence\\ManagerRegistry' => '?',
            'doctrine.dbal.event_manager' => '?',
            'Doctrine\\DBAL\\Connection $defaultConnection' => '?',
            'Doctrine\\ORM\\EntityManagerInterface' => '?',
            'doctrine.orm.default_metadata_cache' => '?',
            'doctrine.orm.default_result_cache' => '?',
            'doctrine.orm.default_query_cache' => '?',
            'Doctrine\\ORM\\EntityManagerInterface $defaultEntityManager' => '?',
            'doctrine.orm.default_entity_manager.event_manager' => '?',
            'doctrine.migrations.metadata_storage' => '?',
            'argument_resolver.controller_locator' => '?',
            'doctrine.id_generator_locator' => '?',
            'Psr\\Log\\LoggerInterface' => '?',
            'serializer.mapping.class_metadata_factory' => '?',
            'property_info' => '?',
            'doctrine.orm.default_metadata_driver' => '?',
        ]);
    }
}
